13: 정규표현식

목표
• 정규표현식을 이해하고, 텍스트 데이터에서 특정 패턴을 찾거나 변환하는 능력을 익힌다.
• 복잡한 텍스트 데이터를 효율적으로 처리하기 위해 정규표현식을 활용하여 문자열 검색, 추출, 검증 및 수정 작업을 수행한다.

학습 내용

1. 정규표현식 기본 개념
• 정규표현식의 정의와 필요성
     •  정규표현식이란 무엇인가? 정규표현식의 정의와 장점 이해하기.
     •  정규표현식이 복잡한 문자열 패턴을 찾고 처리하는 데 효과적인 이유를 학습.
• 정규표현식 기본 문법
     •  기초 패턴 문법 (., *, +, ?, [], ())의 의미와 활용 방법.
     •  특수 문자와 이스케이프 문자 (\d, \w, \s, \D, \W, \S)를 사용하여 다양한 패턴을 정의하는 방법.

2. 정규표현식 패턴 작성법
• 기본 패턴 구성 요소
     •  앵커(^, $)를 사용해 문자열의 시작과 끝을 지정하는 방법.
     •  선택 (|)과 그룹(())을 사용하여 여러 패턴을 결합하는 방법.
• 패턴 반복
     •  {}를 사용한 반복 횟수 제한 및 반복 (*, +, ?)의 차이 이해.
     •  특정 개수의 반복 및 범위 지정 예시.

3. 파이썬에서의 정규표현식 사용법
• re 모듈 기본 메서드
     •  re.match(), re.search(), re.findall(), re.finditer() 메서드 사용법과 차이점.
     •  re.sub()를 사용한 문자열 대체 방법과 응용.
• 패턴 컴파일
     •  re.compile()을 사용하여 정규표현식 패턴을 컴파일하고 효율적으로 사용하는 방법.
     •  패턴 컴파일의 장점과 실무적 응용 사례.

4. 정규표현식 실전 연습
• 문자열 패턴 검색
     •  이메일 주소, 전화번호, URL, IP 주소와 같은 특정 패턴의 텍스트를 추출하고 검증하는 방법.
     •  정규표현식을 활용한 다양한 패턴 탐색 및 추출 실습.
• 데이터 유효성 검사
     •  입력된 문자열이 특정 형식을 충족하는지 정규표현식으로 검증.
     •  예: 이메일 형식 유효성 검사, 비밀번호 복잡도 검사 등.
• 정규표현식을 사용한 문자열 변환
     •  텍스트 포맷 변환 및 특정 패턴을 기준으로 데이터를 변환하는 실습.
     •  예: 날짜 형식 변경, URL에서 특정 부분 추출 등.

5. 고급 정규표현식 기능
• 역참조
     •  정규표현식 내에서 역참조(\1, \2)를 사용하여 반복되는 부분을 매칭하는 방법.
• 전방 탐색과 후방 탐색
     •  (?=...)와 (?<=...)를 사용한 전방 탐색과 후방 탐색의 개념과 활용 예시.
     •  비캡처 그룹 (?:...)을 사용하여 특정 부분을 그룹화하지만 캡처하지 않는 방법.
• 정규표현식 예외 처리
        •올바르지 않은 패턴이 들어올 때 발생할 수 있는 오류와 이를 처리하는 방법.