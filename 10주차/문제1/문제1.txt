연습 문제1. 서버 리소스 관리 시스템

데이터센터의 서버 리소스를 관리하는 프로그램을 작성하세요.
이 프로그램은 각 서버의 CPU, 메모리, 디스크 사용량을 모니터링하고,
특정 서버에 리소스를 추가하거나 배분하며, 과부하 상태를 감지하는 기능을 제공합니다.

요구사항
1. 서버 클래스 정의
    • Server 클래스를 작성하고, 다음 속성과 메서드 추가
           • 속성:
               • 서버 이름(name), CPU 사용량(%)(cpu_usage), 메모리 사용량(GB)(memory_usage), 디스크 사용량(GB)(disk_usage).
               • 리소스 한도: CPU 100%, 메모리 128GB, 디스크 1024GB.

           • 메서드:
               • add_resources(cpu, memory, storage): 서버의 리소스를 추가. 한도를 초과하면 예외 처리.
               • get_status(): 서버의 현재 리소스 사용량과 상태를 반환.
               • is_overloaded(): CPU 90% 이상 또는 메모리 120GB 이상 사용 시 과부하 상태로 간주.

2. 데이터센터 클래스 정의
    • DataCenter 클래스를 작성하고, 다음 속성과 메서드 추가
       • 속성: 데이터센터 이름(name), 서버 리스트(servers).
       • 메서드:
           • add_server(server): 서버 객체를 데이터센터에 추가.
           • distribute_resources(server_name, cpu, memory, disk): 특정 서버에 리소스를 추가하며, 과부하 상태일 경우 다른 서버로 리소스를 분산.

3. 서버 관리
      • 여러 서버 객체를 생성하고 데이터센터에 추가.
      • 특정 서버의 리소스를 추가하고, 과부하 상태를 출력.

입력 예시
----------------------------------------------------------------------
# 서버 객체 생성
server1 = Server("Server1", 80, 100, 500)
server2 = Server("Server2", 50, 64, 300)

# 데이터센터 생성 및 서버 추가
datacenter = DataCenter("PGDC")
datacenter.add_server(server1)
datacenter.add_server(server2)

# 리소스 추가 및 분산
datacenter.distribute_resources("Server1", 15, 30, 100)


출력 예시
----------------------------------------------------------------------
=== 데이터센터 상태 ===
데이터센터 이름: PGDC

서버 상태:
1. Server1
   - CPU 사용량: 95%
   - 메모리 사용량: 130GB (과부하)
   - 디스크 사용량: 600GB
   - 상태: 과부하
2. Server2
   - CPU 사용량: 50%
   - 메모리 사용량: 64GB
   - 디스크 사용량: 300GB
   - 상태: 정상

권장 조치:
- Server1의 과부하 리소스를 Server2로 분산