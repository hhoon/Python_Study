문제2. 웹페이지 접속 로그 데이터 분석 프로그램

웹사이트의 접속 로그 데이터를 분석하는 프로그램을 작성하세요.
정규표현식을 활용하여 로그 데이터를 파싱하고, 다차원적인 통계를 생성합니다.
데이터는 다양한 요청 타입(GET, POST, DELETE 등)과 사용자 에이전트(브라우저 정보)를 포함합니다.

문제 예시
 1. 로그 데이터 파싱
    • 로그 파일에서 다음 정보를 추출
       • IP 주소: 요청을 보낸 클라이언트의 IP.
       • 요청 시간: 요청이 처리된 날짜와 시간.
       • HTTP 메서드: GET, POST, DELETE, PUT 등.
       • URL: 요청 대상 URL.
       • HTTP 상태 코드: 요청 처리 결과 코드.
       • 응답 시간: 서버가 요청을 처리하는 데 걸린 시간(ms).
       • 사용자 에이전트: 브라우저 또는 클라이언트 정보.
    • 정규표현식을 사용하여 로그 데이터를 파싱하고, 유효하지 않은 데이터를 무시.

2. 클래스 설계
    • 클래스를 자유롭게 설계하여 아래 요구사항을 충족
       • 로그 데이터를 객체로 표현.
       • 데이터를 저장, 필터링, 분석하는 기능 제공.
    • 정규표현식을 활용하여 데이터를 파싱하는 메서드를 포함.

3. 통계 생성
    • HTTP 메서드별 요청 수 계산.
    • HTTP 상태 코드별 요청 수 계산.
    • 사용자 에이전트별 요청 수 계산.
    • 요청 처리에 가장 오래 걸린 요청(상위 5개).
    • 특정 IP가 얼마나 자주 요청을 보냈는지 확인.

4. 데이터 필터링
    • 응답 시간이 임계치를 초과한 요청 필터링.
    • 특정 URL(예: /api/)로 시작하는 요청 필터링.

5. 결과 출력
    • 요청 수 통계.
    • 응답 시간이 가장 긴 요청과 세부 정보.
    • 특정 조건에 맞는 요청 필터링 결과.



access_logs.txt
----------------------------------------------------------------------------------------------------
192.168.1.1 - [2024-11-06 10:00:00] "GET /index.html HTTP/1.1" 200 256 "Mozilla/5.0"
10.0.0.2 - [2024-11-06 10:01:00] "POST /api/data HTTP/1.1" 500 1024 "curl/7.64.1"
192.168.1.3 - [2024-11-06 10:02:00] "DELETE /api/resource HTTP/1.1" 404 512 "PostmanRuntime/7.29.0"
192.168.1.1 - [2024-11-06 10:03:00] "GET /about.html HTTP/1.1" 200 128 "Mozilla/5.0"
10.0.0.2 - [2024-11-06 10:04:00] "GET /api/data HTTP/1.1" 200 2048 "curl/7.64.1"


출력 예시
----------------------------------------------------------------------------------------------------
=== HTTP 메서드별 요청 수 ===
GET: 3
POST: 1
DELETE: 1

=== HTTP 상태 코드별 요청 수 ===
200: 3
500: 1
404: 1

=== 사용자 에이전트별 요청 수 ===
Mozilla/5.0: 2
curl/7.64.1: 2
PostmanRuntime/7.29.0: 1

=== 응답 시간이 가장 긴 요청 (상위 5개) ===
1. IP: 10.0.0.2, URL: /api/data, 응답 시간: 2048ms
2. IP: 10.0.0.2, URL: /api/data, 응답 시간: 1024ms
3. IP: 192.168.1.3, URL: /api/resource, 응답 시간: 512ms
4. IP: 192.168.1.1, URL: /index.html, 응답 시간: 256ms
5. IP: 192.168.1.1, URL: /about.html, 응답 시간: 128ms

=== 특정 IP 요청 수 ===
IP: 10.0.0.2, 요청 수: 2